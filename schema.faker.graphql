# This is sample IDL schema for GraphQL Faker.
#
# There are two directives you can use to enhance fake data:
#   - @fake
#   - @examples
# Each directive has autocompletion working so start by typing @
#
# Press save or Cmd+Enter to apply the changes and update server. Switch to GraphiQL
# on the left panel to immediately test your changes.
# This tool also supports extending existing APIs. Check graphql-faker --help

type Company {
  id: String @examples(values: ["1", "2", "3", "4", "5"])
  name: String @fake(type:companyName)  
  picture: String @fake(type:imageUrl)
  balance: Float
  cpmAllowed: Boolean
    cpcAllowed: Boolean
    cpmPricingStrategy: String @examples(values: ["Fixed", "RateOnTop"])
    cpcPricingStrategy: String @examples(values: ["Fixed"])
  cpmCutRate: Float
  overdraftAllowed: Boolean
  maxOverdraftAmount: Float
  users: [User]
  offers: [Offer]
  credits: [Credit]
  expenses: [Expense]
}

type Offer {
  id: String @examples(values: ["1", "2", "3", "4", "5"])
  name: String @fake(type:productName)
  status: String @examples(values: ["Active", "Paused"])
  description: String @fake(type: lorem, options: {loremSize: sentences})
    picture: String @fake(type:imageUrl)
  advertiserDomain: String @fake(type: domainName)
    startDate: String @fake(type: pastDate)
  endDate: String @fake(type: futureDate)
  campaignAggregatedOss: [DeviceOs]
  campaignAggregatedCountryCodes: [String] @examples(values: ["FR", "DE", "IN", "US", "ES", "CR"])
  activeCampaigns: Int
  pausedCampaigns: Int
  appBundle: String @fake(type: domainName)
  appDetail: AppDetail
  campaigns: [Campaign]
  company: Company
}

type Campaign {
  id: String @examples(values: ["1", "2", "3", "4", "5"])
  name: String @fake(type:financeAccountName)
  status: String @examples(values: ["Active", "Paused"])
  bidPrice: Float,
  minBidPrice: Float,
  dailyBudget: Float,
  overallBudget: Float,
  cmpType: CMPType,
  cmpPrice: Float
  minCmpPrice: Float
  clickUrl: String @fake(type: url)
  osVersionMin: String @fake(type: semver)
  osVersionMax: String @fake(type: semver)
  spendingMode: SpendingMode
  manualBoost: Int
  biddingStrategy: BiddingStrategy
  ctrModel: CTRModel
  ctrModelTrainDays: Int
  sameDeviceDailyCap: Int
  deviceIdRequired: Boolean
  iUrl: String @fake(type: url)
  impressionPixelUrls: [String] @fake(type: url)
  creatives: [Creative]
  offer: Offer
  lastModelUpdate: String @examples(values: ["2017-05-19T13:00:00.417Z", "2017-05-19T13:00:42.926Z", "2017-05-19T13:01:25.682Z", "2017-05-19T13:02:08.672Z", "2017-05-19T13:02:51.160Z", "2017-05-19T13:03:35.105Z", "2017-05-19T13:04:17.723Z", "2017-05-19T13:05:00.147Z"])
  targets(filter: TargetFilter): [Target]
}

type Target {
  dimension: Dimension
  value: JSON @examples(values: [{ list: ["FR", "US", "DE"], blacklist: false, min: "10-09-2017", max: "20-09-2017"}])
}

type Creative {
  id: String @examples(values: ["1", "2", "3", "4", "5"])
  active: Boolean
  name: String @fake(type:filename)
  offer: Offer
  campaign: Campaign
  active: Boolean
  type: CreativeType
  picture: String @fake(type: imageUrl)
  html: String @fake(type: lorem, options: {loremSize: sentences})
  height: Int
  width: Int
  campaigns: [Campaign]
}

type User {
  id: String @fake(type: uuid)
  name: String @fake(type:fullName)
  picture: String @fake(type:avatarUrl)
  email: String @fake(type: email)
  active: Boolean
  readonly: Boolean 
  emailNotification: Boolean
  role: String @examples(values: ["Admin", "MediaBuyer"])
  company: Company
}

type Credit {
  id: String @fake(type: uuid)
  companyId: String @fake(type: uuid)
  createdAt: String @fake(type: pastDate)
  amount: Float
  comment: String @fake(type: lorem, options: { loremSize: words })
  userId: String @fake(type: uuid)
  user: User
}

type Expense {
  id: String @fake(type: uuid)
  companyId: String @fake(type: uuid)
  amount: Float
  balance: Float
  startDate: String @fake(type: pastDate)
  endDate: String @fake(type: futureDate)
}

type ReportRow {
  bidsDone: Int
  bidsWon: Int
  clicks: Int
  spent: Float
  bidsWinRate: Float
  CTR: Float
  avgCPC: Float
  avgCPM: Float
  avgBidCost: Float
  avgMbBidCost: Float
  hour: String @examples(values: ["01","02", "03", "07", "08", "12", "15", "19", "21"])
  date: String @examples(values: ["2017-07-15", "2017-07-14", "2017-07-17", "2017-07-18", "2017-07-16", "2017-07-20", "2017-07-19"])
  weekday: String @examples(values: ["1", "2", "3"])
  week: String @examples(values: ["25", "26", "27"])
  month: String @examples(values: ["04", "05", "06"])
  year: String @examples(values: ["2015", "2016", "2017"])
  exchangeId: String @fake(type: uuid)
  publisherId: String @fake(type: uuid)
  ip: String @fake(type: ipv4Address)
  deviceOs: DeviceOs
  deviceType: DeviceType
  deviceOsVersion: String @fake(type: semver)
  deviceBrand: String @examples(values: ["Nokia", "Samsung", "Apple", "Oneplus", "Motorolla", "Oppo"])
  deviceModel: String @examples(values: ["iphone5", "iphone6", "one", "galaxys6", "razor", "andromeda"])
  connectionType: ConnectionType
  region: String @fake(type: state)
  city: String @fake(type: city)
  isp: String @fake(type: companyName)
  company: Company
  offer: Offer
  campaign: Campaign
  creative:Creative
  countryCode: String @examples(values: ["FR", "DE", "IN", "US", "ES", "CR"])
  dailySpentPercent: Float
  overallSpentPercent: Float
}

type Report {
  rows: [ReportRow],
  totals: ReportRow
}


type AppDetail {
  id: String @fake(type: uuid)
  name: String @fake(type:productName)
  advertiserDomain: String @fake(type: domainName)
    picture: String @fake(type:imageUrl)
  deviceOs: DeviceOs
  description: String @fake(type: lorem, options: {loremSize: sentences})
  geo: String @examples(values: ["FR", "IN", "DE", "UK", "US"])
  size: String @examples(values: ["10mb", "5mb", "20mb"])
  storeUrl: String @fake(type: url)
  version: String @fake(type: semver)
  osVersionMin: String @fake(type: semver)
  storeId: String @fake(type: uuid)
}

type ModelPerformance {
  id: String @fake(type: uuid)
  time: String @examples(values: ["2017-05-19T13:00:00.417Z", "2017-05-19T13:00:42.926Z", "2017-05-19T13:01:25.682Z", "2017-05-19T13:02:08.672Z", "2017-05-19T13:02:51.160Z", "2017-05-19T13:03:35.105Z", "2017-05-19T13:04:17.723Z", "2017-05-19T13:05:00.147Z"])
  folds: Int
  avgAuc: Float
  avgFscore: Float
  model: String @examples(values: ["2017-05-19-12-59-20.model", "2017-05-19-13-00-02.model", "2017-05-19-13-00-45.model", "2017-05-19-13-01-28.model", "2017-05-19-13-02-10.model", "2017-05-19-13-02-53.model", "2017-05-19-13-03-37.model", "2017-05-19-13-04-19.model"])
  groupId: String @examples(values: ["US STU iOS SMARTY_AOTD 320x50", "US STU iOS SMARTY_AOTD 320x50", "US STU iOS SMARTY_AOTD 320x50", "US STU iOS SMARTY_AOTD 320x50", "US STU iOS SMARTY_AOTD 320x50"])
}

type Setting {
  dailyBudget: Float
  exchangeBlacklist: [String] @examples(values: ["MOBFOX", "RED", "GREEN", "YELLOW", "ORANGE", "BLUE"])
  exchanges: [String] @examples(values: ["MOBFOX", "RED", "GREEN", "YELLOW", "ORANGE", "BLUE"])
}

input RowObjectFilter {
  id: String
  name_contains: String
}

input RowFilter {
  offer_in: [String]
  campaign_in: [String]
  company_in: [String]
  creative_in: [String]
  dateStart_in: [String]
  dateEnd_in: [String]
  date_gte: String
  date_lte: String
  
  company_has: RowObjectFilter
  offer_has: RowObjectFilter
  campaign_has: RowObjectFilter
}

input ReportFilter {
  
  rows_where: RowFilter
  
  dateStart: String
  dateEnd: String
  
  company: String
  offer: String
  campaign: String
  creative: String
  
  exchangeId: String
  publisherId: String
  
  countryCode: String
  region: String
  city: String
  connectionType: String
  
  deviceOs: String
  deviceOsVersion: String
  deviceType: String
  deviceModel: String
  deviceBrand: String
  IP: String
  ISP: String
  
  year: String
  month: String
  week: String
  day: String
  date: String
}

input FID {
  id: String
}

input OfferFilter {
  user: FID
  company: FID
}

input CampaignFilter {
  offer_has: FID
  status_in: [CampaignStatus]
  ctrModel_in: [CTRModel]
}

input TargetFilter {
  dimension: Dimension
  dimension_in: [Dimension]
}

input TargetInput {
  dimension: Dimension
  vaue: JSON
}

enum CreativeType {
  Banner
  AdTag
}

enum OfferStatus {
  Active
  Paused
}

enum CampaignStatus {
  Active
  Paused
}

enum Role {
  Admin
  MediaBuyer
}

enum ListType {
  Black
  White
}

enum CMPType {
  CPC
  CPM
}

enum CPMPricingStrategy {
  Fixed
  RateOnTop
}

enum CPCPricingStrategy {
  Fixed
}

enum SpendingMode {
  Smooth,
  AsFastAsPossible
}

enum BiddingStrategy {
  Fixed,
  Random,
  Linear,
  Switch,
  Optimal1
}

enum CTRModel {
  VWLOGISTIC,
  Beta
}

enum DeviceOs {
  Android
  IOS
  Other
}

enum DeviceType {
  Iphone,
  Ipad,
  Ipod,
  Aphone,
  Atab,
  Other
}

enum ConnectionType {
  Carrier,
  Lan,
  Other
}

enum GroupBy {
  Year,
  Month,
  Week,
  Weekday,
  Date,
  Hour,
  CompanyId,
  OfferId,
  CampaignId,
  CreativeId,
  ExchangeId,
  PublisherId,
  DeviceOs,
  DeviceType,
  DeviceOsVersion,
  DeviceBrand,
  DeviceModel,
  CountryCode,
  Region,
  City,
  ISP,
  ConnectionType
  Company
  Offer
  Campaign
  Creative
}

enum Dimension {
  Date,
  DeviceOs,
  CountryCode,
  PublisherId,
  ExchangeId,
  ISP,
  Category,
  Region,
  City
}

scalar Date
scalar JSON

type Query {
  allCompanies: [Company!]
  allOffers(filter: OfferFilter): [Offer!]
  allCampaigns(filter: CampaignFilter): [Campaign]
  allUsers: [User]
  allCreatives(filter: CampaignFilter): [Creative]
  allModelPerformances: [ModelPerformance]
  company(id: String): Company
  offer(id: String): Offer
  campaign(id: String): Campaign
  user(id: String): User
  creative(id: String): Creative
  report(filter: ReportFilter, limit: Int, Offset: Int): Report
  setting: Setting
}

type Mutation {
  createUser(name: String, password: String, email: String, role: Role, picture: String, active: Boolean, readonly: Boolean, emailNotification: Boolean, companyId: String): User
  createCompany(name: String, picture: String, cpmAllowed: Boolean, cpcAllowed: Boolean, cpmPricingStrategy: CPMPricingStrategy, cpcPricingStrategy: CPCPricingStrategy, cpmCutRate: Float, overdraftAllowed: Boolean, maxOverdraftAmount: Float): Company
  createOffer(name: String, status: OfferStatus, Description: String, picture: String, advertiserDomain: String, startDate: Date, endDate: Date, userId: String, appId: String, appBundle: String, companyId: String): Offer
  createCampaign(name: String, status: CampaignStatus, dailyBudget: Float, overallBudget: Float, cmpType: CMPType, cmpPrice: Float, minCmpPrice: Float, clickUrl: String, spendingMode: SpendingMode, manualBoost: Int, biddingStrategy: BiddingStrategy, ctrModel: CTRModel, ctrModelTrainDays: Int, sameDeviceDailyCap: Int, iUrl: String, impressionPixelUrls: [String], targets: [TargetInput]): Campaign
  createAppDetail(storeUrl: String): AppDetail
  createCreative(name: String, offerId: String, campaignId: String, type: CreativeType, picture: String, html: String, height: Int, width: Int): Creative
  createCredit(companyId: String, userId: String, comment: String, amount: Float): Credit
  updateUser(id: String, name: String, password: String, email: String, role: Role, picture: String, active: Boolean, readonly: Boolean, emailNotification: Boolean, companyId: String): User
  updateCompany(id: String, name: String, picture: String, cpmAllowed: Boolean, cpcAllowed: Boolean, cpmPricingStrategy: CPMPricingStrategy, cpcPricingStrategy: CPCPricingStrategy, cpmCutRate: Float, overdraftAllowed: Boolean, maxOverdraftAmount: Float): Company
  updateOffer(id: String, name: String, status: OfferStatus, Description: String, picture: String, advertiserDomain: String, startDate: Date, endDate: Date, userId: String, appId: String, appBundle: String, companyId: String): Offer
  updateCampaign(id: String, name: String, status: CampaignStatus,dailyBudget: Float, overallBudget: Float, cmpType: CMPType, cmpPrice: Float, minCmpPrice: Float, clickUrl: String, spendingMode: SpendingMode, manualBoost: Int, biddingStrategy: BiddingStrategy, ctrModel: CTRModel, ctrModelTrainDays: Int, sameDeviceDailyCap: Int, iUrl: String, impressionPixelUrls: [String], targets: [TargetInput]): Campaign
  updateCreative(id: String!, name: String, offerId: String, campaignId: String, type: CreativeType, picture: String, html: String, height: Int, width: Int): Creative
  deleteCompany(id: String): Company
  deleteCreative(id: String): Creative
  deleteUser(id: String): User
  deleteCampaign(id: String): Campaign
  deleteOffer(id: String): Offer
  attachCreativesToCampaign(creativeIds: [String]!, campaignId: String!, active: Boolean): [Creative]
  detachCreativesToCampaign(creativeIds: [String]!, campaignId: String!): [Creative]
  cloneCampaign(id: String, name: String): Campaign
  createModelPerformance(time: String, folds: Int, avgAuc: Float, avgFscore: Float, model: String, groupId: String): ModelPerformance
  updateModelPerformance(id: String, time: String, folds: Int, avgAuc: Float, avgFscore: Float, model: String, groupId: String): ModelPerformance
  deleteModelPerformance(id: String): ModelPerformance
  updateCampaignModelTime(id: String): Campaign
  updateSetting(dailyBudget: Float, exchangeBlacklist: [String]): Setting
}
